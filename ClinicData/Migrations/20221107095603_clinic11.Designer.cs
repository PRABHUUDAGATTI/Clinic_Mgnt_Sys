// <auto-generated />
using System;
using ClinicData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicData.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    [Migration("20221107095603_clinic11")]
    partial class clinic11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicEntity.Models.Department", b =>
                {
                    b.Property<int>("DeptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.HasKey("DeptNo");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("ClinicEntity.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Charges_Per_Visit")
                        .HasColumnType("real");

                    b.Property<int>("Deptno")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<float>("MonthlySalary")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Patient_Treated")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("char(12)");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<float>("ReputeIndex")
                        .HasColumnType("real");

                    b.Property<string>("Specialization")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Work_Experience")
                        .HasColumnType("int");

                    b.HasKey("DoctorID");

                    b.HasIndex("Deptno");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("ClinicEntity.Models.LoginTable", b =>
                {
                    b.Property<int>("LoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("LoginID");

                    b.ToTable("LoginTable");
                });

            modelBuilder.Entity("ClinicEntity.Models.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .HasColumnType("char(12)");

                    b.HasKey("PatientID");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("ClinicEntity.Models.Doctor", b =>
                {
                    b.HasOne("ClinicEntity.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Deptno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicEntity.Models.LoginTable", "LoginTable")
                        .WithMany()
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("LoginTable");
                });

            modelBuilder.Entity("ClinicEntity.Models.Patient", b =>
                {
                    b.HasOne("ClinicEntity.Models.LoginTable", "LoginTable")
                        .WithMany()
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginTable");
                });
#pragma warning restore 612, 618
        }
    }
}
